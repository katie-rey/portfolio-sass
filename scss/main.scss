@import './resets';
@import './variables';

// Functions used to compute / return values
@function weight($weight-name) {
  @return map-get($font-weights, $weight-name);
}

// Mixins define styles

@mixin flexCenter($direction) {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: $direction;
}

@mixin theme($light-theme: true) {
  @if $light-theme {
    background-color: lighten($primary-color, 100%);
    color: darken($text-color, 100%);
  }
}

$font-weights: (
  'regular': 400,
  'medium': 500,
  'bold': 700,
);

body {
  background-color: $primary-color;
  color: $text-color;
  font-weight: map-get($font-weights, 'bold');
}

// Nesting styles
// & = the parent element
// #{} interpolation

.main {
  width: 80%;
  margin: 0 auto;

  // add mixin
  @include flexCenter(column);

  #{&}-paragraph {
    // font-weight: map-get($font-weights, 'bold'); this is before the weight function was created
    font-weight: weight(regular);

    &:hover {
      color: pink;
    }
  }
}

.light {
  @include theme($light-theme: false);
}
